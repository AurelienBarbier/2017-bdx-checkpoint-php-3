<?php

namespace TvShowManagerBundle\Repository;

use TvShowManagerBundle\Entity\TvShow;

/**
 * EpisodeRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EpisodeRepository extends \Doctrine\ORM\EntityRepository
{
    public function findEpisodesWithShow() {
        $qb = $this->createQueryBuilder('e');

        $qb
            ->join('e.tvShow', 's')
            ->addSelect('s');

        return $qb->getQuery()->getResult();
    }

    // Atelier SQL / DQL / QB - Exercice 1
    public function findAllEpisodesByTvShowQB(TvShow $tvShow) {

        $qb = $this->createQueryBuilder('e')
            ->where('e.tvShow = :tvShow')
            ->setParameter('tvShow', $tvShow)
        ;

        return $qb->getQuery()->getResult();
    }

    public function findAllEpisodesByTvShowDQL(TvShow $tvShow) {

        $em = $this->getEntityManager();
        $query = $em->createQuery(
            'SELECT e 
                  FROM TvShowManagerBundle:Episode e
                  WHERE e.tvShow = :tvShow'
        );
        $query->setParameter('tvShow', $tvShow);

        return $query->getResult();
    }

    // Atelier SQL / DQL / QB - Exercice 2
    public function countAllEpisodesQB() {

        $qb = $this->createQueryBuilder('e');

        $qb->select($qb->expr()->count('e'));

        return $qb->getQuery()->getSingleScalarResult();
    }

    public function countAllEpisodesDQL() {

        $em = $this->getEntityManager();
        $query = $em->createQuery(
            'SELECT COUNT(e) 
                  FROM TvShowManagerBundle:Episode e'
        );

        return $query->getSingleScalarResult();
    }

    // Atelier SQL / DQL / QB - Exercice 3
    public function findWorstEpisodeQB() {

        $qb = $this->createQueryBuilder('e')
            ->orderBy('e.note')
            ->setMaxResults(1)
        ;

        return $qb->getQuery()->getSingleResult();
    }

    public function findWorstEpisodeDQL() {

        $em = $this->getEntityManager();
        $query = $em->createQuery(
            'SELECT e 
                  FROM TvShowManagerBundle:Episode e
                  ORDER BY e.note'
        );
        $query->setMaxResults(1);

        return $query->getSingleResult();
    }

    // Atelier SQL / DQL / QB - Exercice 4
    public function findBestEpisodeByTvShowQB(TvShow $tvShow) {

        $qb = $this->createQueryBuilder('e')
            ->where('e.tvShow = :tvShow')
            ->setParameter('tvShow', $tvShow)
            ->orderBy('e.note', 'DESC')
            ->setMaxResults(1)
        ;

        return $qb->getQuery()->getSingleResult();
    }

    public function findBestEpisodeByTvShowDQL(TvShow $tvShow) {

        $em = $this->getEntityManager();
        $query = $em->createQuery(
            'SELECT e 
                  FROM TvShowManagerBundle:Episode e
                  WHERE e.tvShow = :tvShow
                  ORDER BY e.note DESC'
        );
        $query
            ->setParameter('tvShow',$tvShow)
            ->setMaxResults(1);

        return $query->getSingleResult();
    }

    // Atelier SQL / DQL / QB - Exercice 6
    public function find3BestEpisodesQB() {

        $qb = $this->createQueryBuilder('e')
            ->addSelect('s.name')
            ->join('e.tvShow', 's')
            ->orderBy('e.note', 'DESC')
            ->setMaxResults(3)
        ;

        return $qb->getQuery()->getResult();
    }

    public function find3BestEpisodesDQL() {

        $em = $this->getEntityManager();
        $query = $em->createQuery(
            'SELECT e, s.name 
                  FROM TvShowManagerBundle:Episode e
                  LEFT JOIN e.tvShow s
                  ORDER BY e.note DESC'
        );
        $query->setMaxResults(3);

        return $query->getResult();
    }

    // Atelier SQL / DQL / QB - Exercice 9
    public function countEpisodesBySeasonQB() {

        $qb = $this->createQueryBuilder('e')
            ->select('s.name', 'e.season', 'COUNT(e) AS nb_episodes')
            ->join('e.tvShow', 's')
            ->groupBy('s.name')
            ->addGroupBy('e.season')
        ;

        return $qb->getQuery()->getResult();
    }

    public function countEpisodesBySeasonDQL() {

        $em = $this->getEntityManager();
        $query = $em->createQuery(
            'SELECT s.name, e.season, COUNT(e) AS nb_episodes 
                  FROM TvShowManagerBundle:Episode e
                  LEFT JOIN e.tvShow s
                  GROUP BY s.name, e.season'
        );

        return $query->getResult();
    }

    // Atelier SQL / DQL / QB - Exercice 10
    public function avgNoteBySeasonByTvShowQB() {

        $qb = $this->createQueryBuilder('e')
            ->select('s.name', 'e.season', 'AVG(e.note) AS avg_note')
            ->join('e.tvShow', 's')
            ->groupBy('s.name')
            ->addGroupBy('e.season')
        ;

        return $qb->getQuery()->getResult();
    }

    public function avgNoteBySeasonByTvShowDQL() {

        $em = $this->getEntityManager();
        $query = $em->createQuery(
            'SELECT s.name, e.season, AVG(e.note) AS avg_note
                  FROM TvShowManagerBundle:Episode e
                  LEFT JOIN e.tvShow s
                  GROUP BY s.name, e.season'
        );

        return $query->getResult();
    }
}
